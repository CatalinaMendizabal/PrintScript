configurations {
    ktlint
}

repositories {
    jcenter()
}

dependencies {
    ktlint "com.pinterest:ktlint:0.43.2"
    // additional 3rd party ruleset(s) can be specified here
    // just add them to the classpath (ktlint 'groupId:artifactId:version') and
    // ktlint will pick them up
}

task ktlint(type: JavaExec, group: "verification") {
    description = "Check Kotlin code style."
    main = "com.pinterest.ktlint.Main"
    classpath = configurations.ktlint
    args "src/**/*.kt"
    // to generate report in checkstyle format prepend following args:
    // "--reporter=plain", "--reporter=checkstyle,output=${buildDir}/ktlint.xml"
    // see https://github.com/pinterest/ktlint#usage for more
}
check.dependsOn ktlint

task ktlintFormat(type: JavaExec, group: "formatting") {
    description = "Fix Kotlin code style deviations."
    main = "com.pinterest.ktlint.Main"
    classpath = configurations.ktlint
    args "-F", "src/**/*.kt"
}

task installGitHook(type: Copy) {
  from new File(rootProject.rootDir, ".ktlint/ktlint-pre-commit")
  into { new File(rootProject.rootDir, '.git/hooks') }
  rename("ktlint-pre-commit", 'pre-commit')

/*  from new File(rootProject.rootDir, "./ktlint/pre-push-2")
  into { new File(rootProject.rootDir, '.git/hooks') }
  rename("pre-push-2", 'pre-push')*/

  fileMode 0775
}

build.dependsOn(ktlint)
build.dependsOn(ktlintFormat)
build.dependsOn installGitHook

